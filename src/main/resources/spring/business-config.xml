<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- Scan packages for Repository beans -->
    <context:component-scan base-package="com.dirtroadsoftware.rds4a.core.repositories.jpa"/>

    <!-- TODO Try moving the properties to a properties configuration file -->
    <!-- Define data source with connection pooling using Apache DBCP.     -->
    <!-- 'url' is the setting for an in-memory H2 database                 -->
    <!--<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">-->
        <!--<property name="username" value="sa"/>-->
        <!--<property name="password" value="sa"/>-->
        <!--<property name="url" value="jdbc:h2:mem:test"/>-->
        <!--<property name="driverClassName" value="org.h2.Driver"/>-->
    <!--</bean>-->

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
    </bean>
    <!-- Pull properties from a configuration file -->
    <context:property-placeholder
            ignore-resource-not-found="true"
            location="jdbc.properties,file:///etc/release-detailer/jdbc.properties" />


    <!-- Define entity manager factory using the most flexible Spring factory bean: -->
    <!--     LocalContainerEntityManagerFactoryBean.                                -->
    <!-- Using Hibernate's JPA adapter, hibernates create-drop property, and        -->
    <!--     Hibernates show_sql property                                           -->
    <!-- Scanning packages for entities                                            -->
    <!--<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
        <!--<property name="jpaVendorAdapter">-->
            <!--<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>-->
        <!--</property>-->
        <!--<property name="jpaProperties">-->
            <!--<map>-->
                <!--<entry key="hibernate.hbm2ddl.auto" value="create-drop"/>-->
                <!--<entry key="hibernate.show_sql" value="true"/>-->
            <!--</map>-->
        <!--</property>-->
        <!--<property name="packagesToScan" value="com.dirtroadsoftware.rds4a.core.models.entities"/>-->
    <!--</bean>-->

    <!-- Define entity manager factory using the most flexible Spring factory bean: -->
    <!--     LocalContainerEntityManagerFactoryBean.                                -->
    <!-- Using Hibernate's JPA adapter, hibernates Hibernates show_sql property    -->
    <!-- Scanning packages for entities                                            -->
    <bean id="releaseEntityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="jpaProperties">
            <map>
                <!-- validate the schema on startup -->
                <entry key="hibernate.hbm2ddl.auto" value="validate"/>

                <entry key="hibernate.show_sql" value="true"/>
            </map>
        </property>
        <property name="packagesToScan" value="com.dirtroadsoftware.rds4a.core.models.entities"/>
    </bean>

    <!-- setup transaction management -->
    <tx:annotation-driven/>
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"/>

    <!-- Scan packages for Service beans -->
    <context:component-scan base-package="com.dirtroadsoftware.rds4a.core.services.impl"/>

    <!-- Scan packages for Security configuration beans -->
    <context:component-scan base-package="com.dirtroadsoftware.rds4a.core.security"/>
</beans>